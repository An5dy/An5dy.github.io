import{_ as p,W as o,X as c,Y as s,Z as n,$ as e,a0 as t,D as i}from"./framework-8a0a3771.js";const l={},r={href:"https://learnku.com/laravel",target:"_blank",rel:"noopener noreferrer"},u={href:"http://tnt.studio/blog/solving-the-search-problem-with-laravel-and-tntsearch",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learnku.com/articles/3702/full-text-indexing-engine-implemented-in-tntsearch-php",target:"_blank",rel:"noopener noreferrer"},k={href:"https://learnku.com/articles/6207/lightweight-full-text-retrieval-engine-tntsearch-and-chinese-word-segmentation",target:"_blank",rel:"noopener noreferrer"},v=s("h2",{id:"tntsearch",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tntsearch","aria-hidden":"true"},"#"),n(" TNTSearch")],-1),m={href:"https://github.com/teamtnt/laravel-scout-tntsearch-driver",target:"_blank",rel:"noopener noreferrer"},b={href:"https://laravel.com/docs/5.8/scout",target:"_blank",rel:"noopener noreferrer"},h={href:"http://www.xunsearch.com/scws/",target:"_blank",rel:"noopener noreferrer"},g=t(`<h2 id="laravel-scout" tabindex="-1"><a class="header-anchor" href="#laravel-scout" aria-hidden="true">#</a> Laravel Scout</h2><h3 id="_1、安装扩展包" tabindex="-1"><a class="header-anchor" href="#_1、安装扩展包" aria-hidden="true">#</a> 1、安装扩展包</h3><blockquote><p>composer require laravel/scout</p></blockquote><p>Lumen 没有发布配置文件这个命令，所以需要修改 ScoutServiceProvider 这个服务提供者，我们可以新建一个适用于 Lumen 的服务提供者。</p><blockquote><p>php artisan make:provider LumenScoutServiceProvider</p></blockquote><p>参考代码如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Scout<span class="token punctuation">\\</span>EngineManager</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Scout<span class="token punctuation">\\</span>ScoutServiceProvider</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Scout<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>FlushCommand</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Scout<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>ImportCommand</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">LumenScoutServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ScoutServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$defer</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token class-name static-context">EngineManager</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">EngineManager</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">runningInConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">commands</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
                <span class="token class-name static-context">ImportCommand</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name static-context">FlushCommand</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">provides</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token class-name static-context">EngineManager</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、发布配置文件" tabindex="-1"><a class="header-anchor" href="#_2、发布配置文件" aria-hidden="true">#</a> 2、发布配置文件</h3><blockquote><p>cp ./vendor/laravel/scout/config/scout.php ./config/scout.php</p></blockquote><h3 id="_3、注册服务提供者-bootstrap-app-php" tabindex="-1"><a class="header-anchor" href="#_3、注册服务提供者-bootstrap-app-php" aria-hidden="true">#</a> 3、注册服务提供者 bootstrap/app.php</h3><blockquote><p>$app-&gt;register(App\\Providers\\LumenScoutServiceProvider::class);</p></blockquote><h2 id="安装-tntsearch" tabindex="-1"><a class="header-anchor" href="#安装-tntsearch" aria-hidden="true">#</a> 安装 TNTSearch</h2><h3 id="_1、安装扩展包-1" tabindex="-1"><a class="header-anchor" href="#_1、安装扩展包-1" aria-hidden="true">#</a> 1、安装扩展包</h3><blockquote><p>composer require teamtnt/laravel-scout-tntsearch-driver</p></blockquote><h3 id="_2、配置-config-scout-php" tabindex="-1"><a class="header-anchor" href="#_2、配置-config-scout-php" aria-hidden="true">#</a> 2、配置 config/scout.php</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;SCOUT_DRIVER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;algolia&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 设置默认驱动</span>
<span class="token operator">.</span>
<span class="token operator">.</span>
<span class="token operator">.</span>
<span class="token string single-quoted-string">&#39;tntsearch&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;storage&#39;</span>       <span class="token operator">=&gt;</span> <span class="token function">storage_path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//必须有可写权限</span>
        <span class="token string single-quoted-string">&#39;fuzziness&#39;</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TNTSEARCH_FUZZINESS&#39;</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 模糊匹配</span>
        <span class="token string single-quoted-string">&#39;fuzzy&#39;</span>         <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;prefix_length&#39;</span>     <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;max_expansions&#39;</span>    <span class="token operator">=&gt;</span> <span class="token number">50</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;distance&#39;</span>          <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;asYouType&#39;</span>     <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;searchBoolean&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;TNTSEARCH_BOOLEAN&#39;</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;tokenizer&#39;</span>     <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">// 分词器</span>
        <span class="token comment">// 禁止索引词语</span>
        <span class="token string single-quoted-string">&#39;stopwords&#39;</span>     <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;的&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;了&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;而是&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、注册服务提供者-bootstrap-app-php-1" tabindex="-1"><a class="header-anchor" href="#_3、注册服务提供者-bootstrap-app-php-1" aria-hidden="true">#</a> 3、注册服务提供者 bootstrap/app.php</h3><blockquote><p>$app-&gt;register(TeamTNT\\Scout\\TNTSearchScoutServiceProvider::class);</p></blockquote><h2 id="scws-中文分词系统" tabindex="-1"><a class="header-anchor" href="#scws-中文分词系统" aria-hidden="true">#</a> SCWS 中文分词系统</h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><blockquote><p>SCWS 是 Simple Chinese Word Segmentation 的首字母缩写（即：简易中文分词系统）。 这是一套基于词频词典的机械式中文分词引擎，它能将一整段的中文文本基本正确地切分成词。 词是中文的最小语素单位，但在书写时并不像英语会在词之间用空格分开， 所以如何准确并快速分词一直是中文分词的攻关难点。 SCWS 采用纯 C 语言开发，不依赖任何外部库函数，可直接使用动态链接库嵌入应用程序， 支持的中文编码包括 GBK、UTF-8 等。此外还提供了 PHP 扩展模块， 可在 PHP 中快速而方便地使用分词功能。 分词算法上并无太多创新成分，采用的是自己采集的词频词典，并辅以一定的专有名称，人名，地名， 数字年代等规则识别来达到基本分词，经小范围测试准确率在 90% ~ 95% 之间， 基本上能满足一些小型搜索引擎、关键字提取等场合运用。首次雏形版本发布于 2005 年底。 SCWS 由 hightman 开发， 并以 BSD 许可协议开源发布，源码托管在 github。</p></blockquote><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>`,22),f={href:"http://www.xunsearch.com/scws/download.php",target:"_blank",rel:"noopener noreferrer"},w=t(`<h3 id="编写分词器" tabindex="-1"><a class="header-anchor" href="#编写分词器" aria-hidden="true">#</a> 编写分词器</h3><h4 id="_1、编写分词类" tabindex="-1"><a class="header-anchor" href="#_1、编写分词类" aria-hidden="true">#</a> 1、编写分词类</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Scws</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$scws</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Scws constructor.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$config</span> scws 配置文件，详情参考官网 php 代码
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$config</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@use</span>      [设置分词文本]
     * @Author   ze &lt;846562014@qq.com&gt;
     * <span class="token keyword">@date</span>     2019-06-21 16:57
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$text</span>
     * <span class="token keyword">@return</span> $this
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">sendText</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">self</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">snake</span><span class="token punctuation">(</span><span class="token constant">__FUNCTION__</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">init</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$config</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span> <span class="token operator">=</span> <span class="token function">scws_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$config</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token string single-quoted-string">&#39;set_&#39;</span> <span class="token operator">.</span> <span class="token variable">$key</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">snake</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、编写分词器" tabindex="-1"><a class="header-anchor" href="#_2、编写分词器" aria-hidden="true">#</a> 2、编写分词器</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>Scws<span class="token punctuation">\\</span>Scws</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ScwsTokenizer</span> <span class="token keyword">extends</span> <span class="token class-name">Tokenizers</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$scws</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scws</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;scws 配置文件&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 可以把 scws 注册到容器中</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@use</span>      [获取分词]
     * @Author   ze  &lt;846562014@qq.com&gt;
     * <span class="token keyword">@date</span>     2019-07-17 11:04
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$text</span>
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getTokens</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token operator">-&gt;</span><span class="token function">sendText</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$tokens</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token operator">-&gt;</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$tokens</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$tokens</span><span class="token punctuation">,</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;word&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token variable">$tokens</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getScws</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">scws</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、配置-config-scout-php" tabindex="-1"><a class="header-anchor" href="#_3、配置-config-scout-php" aria-hidden="true">#</a> 3、配置 config/scout.php</h4><blockquote><p>&#39;tokenizer&#39; =&gt; App\\Extensions\\TNTSearch\\Tokenizers\\ScwsTokenizer::class,</p></blockquote><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><h4 id="_1、配置-model" tabindex="-1"><a class="header-anchor" href="#_1、配置-model" aria-hidden="true">#</a> 1、配置 Model</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Scout<span class="token punctuation">\\</span>Searchable</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Searchable</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token variable">$asYouType</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Get the indexable data array for the model.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">toSearchableArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Customize array...</span>

        <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、同步数据到搜索服务" tabindex="-1"><a class="header-anchor" href="#_2、同步数据到搜索服务" aria-hidden="true">#</a> 2、同步数据到搜索服务</h4><blockquote><p>php artisan scout:import App\\\\Post 或 php artisan tntsearch:import App\\\\Post</p></blockquote><h4 id="_3、使用-model-进行搜索" tabindex="-1"><a class="header-anchor" href="#_3、使用-model-进行搜索" aria-hidden="true">#</a> 3、使用 Model 进行搜索</h4><blockquote><p>Post::search(&#39;Bugs Bunny&#39;)-&gt;get();</p></blockquote><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,15),y={href:"https://learnku.com/articles/3702/full-text-indexing-engine-implemented-in-tntsearch-php",target:"_blank",rel:"noopener noreferrer"},_={href:"https://learnku.com/articles/6207/lightweight-full-text-retrieval-engine-tntsearch-and-chinese-word-segmentation",target:"_blank",rel:"noopener noreferrer"},S={href:"http://tnt.studio/blog/solving-the-search-problem-with-laravel-and-tntsearch",target:"_blank",rel:"noopener noreferrer"};function x($,q){const a=i("ExternalLinkIcon");return o(),c("div",null,[s("p",null,[n("前段时间，我一直想给自己的博客加个全文搜索功能，用 ElasticSearch、Sphinx 等功能强大的全文搜索引擎总有种杀鸡焉用牛刀的感觉，正好在逛 "),s("a",r,[n("Laravel-China"),e(a)]),n(" 社区时，有大神推荐 "),s("a",u,[n("TNTSearch"),e(a)]),n(" 这个纯 PHP 编写的轻量级全文检索引擎，性能不错且安装便捷，非常符合我的需求。参考了 "),s("a",d,[n("《TNTSearch - PHP 实现的全文索引引擎》"),e(a)]),n("和"),s("a",k,[n("《轻量级全文检索引擎 TNTSearch 和中文分词》"),e(a)]),n("等文章后，利用 Lumen + TNTSearch 实现了全文搜索功能。")]),v,s("p",null,[n("因为用了 Lumen 这个 Laravel 微框架，所以可以使用官方提供的 Laravel Scout 驱动 "),s("a",m,[n("teamtnt/laravel-scout-tntsearch-driver"),e(a)]),n("，当然前提是你已经安装了 "),s("a",b,[n("Scout"),e(a)]),n(" 驱动，但是该驱动对 Lumen 不能直接适用，需要修改一部分代码，同时 TNTSearch 默认的分词器对中文支持不够（以标点符号、特殊符号和空格为分隔符进行分词），为了解决这个问题，采用了 "),s("a",h,[n("SCWS"),e(a)]),n(" 这个纯 C 语言开发的分词系统来进行中文分词。")]),g,s("p",null,[n("下载及安装在 "),s("a",f,[n("官网"),e(a)]),n(" 有详细的文档，这里就不详细说明。")]),w,s("ol",null,[s("li",null,[s("a",y,[n("《TNTSearch - PHP 实现的全文索引引擎》"),e(a)])]),s("li",null,[s("a",_,[n("《轻量级全文检索引擎 TNTSearch 和中文分词》"),e(a)])]),s("li",null,[s("a",S,[n("《Solving the search problem with Laravel and TNTSearch》"),e(a)])])])])}const N=p(l,[["render",x],["__file","TNTSearch_SCWS实现中文全文搜索.html.vue"]]);export{N as default};
