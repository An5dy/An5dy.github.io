import{_ as i,W as l,X as o,Y as a,Z as n,$ as e,a0 as t,D as p}from"./framework-8a0a3771.js";const r={},d=a("h2",{id:"场景",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#场景","aria-hidden":"true"},"#"),n(" 场景")],-1),c={href:"https://learnku.com/courses/creating-package",title:"《LX2 PHP 扩展包实战教程 - 从入门到发布》",target:"_blank",rel:"noopener noreferrer"},u={href:"https://packagist.org/packages/an5dy/laravel-admin-modules",title:"an5dy/laravel-admin-modules",target:"_blank",rel:"noopener noreferrer"},h=t(`<h2 id="需求环境" tabindex="-1"><a class="header-anchor" href="#需求环境" aria-hidden="true">#</a> 需求环境</h2><ul><li>PHP &gt;= 7.0.0</li><li>laravel-admin &gt;= 1.6</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require an5dy/laravel-admin-modules <span class="token parameter variable">--dev</span> <span class="token parameter variable">-vvv</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>💡 建议安装在 dev 下，正式线不需要安装。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="首先新建一个模块" tabindex="-1"><a class="header-anchor" href="#首先新建一个模块" aria-hidden="true">#</a> 首先新建一个模块</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php admin:module:make <span class="token punctuation">{</span>name<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>name</strong>：模块名</li></ul><h4 id="模块初始目录结构" tabindex="-1"><a class="header-anchor" href="#模块初始目录结构" aria-hidden="true">#</a> 模块初始目录结构</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>app/<span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>
├── Controllers
├── Models
├── Providers
│   └── <span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>ServiceProvider.php
└── routes.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>app/{模块名}</strong>：目录用于存放相关模块文件。</li><li><strong>app/{模块名}/Controllers</strong>：目录用于存放模块控制器文件。</li><li><strong>app/{模块名}/Models</strong>：目录用于存放模块模型文件。</li><li><strong>app/{模块名}/Providers</strong>：目录用于存放模块服务提供者文件，{模块名}ServiceProvider.php 文件是当前模块的 laravel 服务提供者类，用于加载模块路由等功能，需手动注册到 config/app.php 配置文件中。</li><li><strong>app/{模块名}/routes.php</strong>：文件用于配置模块路由。</li></ul><h3 id="创建指定模块控制器类" tabindex="-1"><a class="header-anchor" href="#创建指定模块控制器类" aria-hidden="true">#</a> 创建指定模块控制器类</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan admin:module:controller <span class="token punctuation">{</span>module<span class="token punctuation">}</span> <span class="token punctuation">{</span>model<span class="token punctuation">}</span> <span class="token punctuation">{</span>--title<span class="token operator">=</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>--stub<span class="token operator">=</span> <span class="token builtin class-name">:</span> Path to the custom stub file. <span class="token punctuation">}</span> <span class="token punctuation">{</span>--output<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>module</strong>：需创建控制器的模块名。</li><li><strong>model</strong>：当前模块 <strong>Models</strong> 目录下的模型名，可通过以下命令来生成。</li></ul>`,15),v=a("blockquote",{模型名:""},[a("p",null,"php artisan make:model App\\{模块名}\\Models\\")],-1),m={href:"https://laravel-admin.org/docs/zh/1.x/quick-start",title:"admin:make",target:"_blank",rel:"noopener noreferrer"},b=t(`<h3 id="创建指定模块表单请求类" tabindex="-1"><a class="header-anchor" href="#创建指定模块表单请求类" aria-hidden="true">#</a> 创建指定模块表单请求类</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan admin:module:request <span class="token punctuation">{</span>module<span class="token punctuation">}</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>module</strong>：需创建表单请求类的模块名。</li><li><strong>name</strong>：表单请求类名称。</li></ul><h3 id="创建指定模块服务提供者类" tabindex="-1"><a class="header-anchor" href="#创建指定模块服务提供者类" aria-hidden="true">#</a> 创建指定模块服务提供者类</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan admin:module:provider <span class="token punctuation">{</span>module<span class="token punctuation">}</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>module</strong>：需创建服务提供者类的模块名。</li><li><strong>name</strong>：服务提供者类名称。</li></ul><h3 id="创建指定模块-bootstrap-php-配置文件" tabindex="-1"><a class="header-anchor" href="#创建指定模块-bootstrap-php-配置文件" aria-hidden="true">#</a> 创建指定模块 <strong>bootstrap.php</strong> 配置文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan admin:module:bootstrap <span class="token punctuation">{</span>module<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>module</strong>：需创建 bootstrap.php 的模块名。</li></ul><h4 id="以上命令执行后的模块目录结构" tabindex="-1"><a class="header-anchor" href="#以上命令执行后的模块目录结构" aria-hidden="true">#</a> 以上命令执行后的模块目录结构</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>app/<span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>
├── Controllers
├── Middleware
│   └── ModuleBootstrap.php
├── Models
├── Providers
│   └── <span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>ServiceProvider.php
├── bootstrap.php
└── routes.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>app/{模块名}/Middleware/ModuleBootstrap.php</strong>：当前模块的 bootstrap.php 文件重载中间件，需配置在 {模块名}ServiceProvider.php 中，具体代码如下所示。</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">use</span> App\\<span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>\\Middleware\\ModuleBootstrap<span class="token punctuation">;</span>
	<span class="token operator">.</span>
  <span class="token operator">.</span>
  <span class="token operator">.</span>
	<span class="token keyword">class</span> <span class="token punctuation">{</span>模块名<span class="token punctuation">}</span>ServiceProvider <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;router&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">aliasMiddleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.bootstrap&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">ModuleBootstrap</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
		<span class="token operator">.</span>
		<span class="token operator">.</span>
		<span class="token operator">.</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),k=a("strong",null,"app/{模块名}/bootstrap.php",-1),g={href:"https://laravel-admin.org/docs/zh/1.x/configuration#app/Admin/bootstrap.php",target:"_blank",rel:"noopener noreferrer"};function _(f,x){const s=p("ExternalLinkIcon");return l(),o("div",null,[d,a("p",null,[n("laravel-admin 是一个可以快速帮你构建后台管理的工具，它提供的页面组件和表单元素等功能，能帮助你使用很少的代码就实现功能完善的后台管理功能。但是当后台功能不断迭代，导致原本的 Admin 目录过于庞大，不同功能模块之间如果使用相同的 Model 会导致出现一些不必要的 bug（比如访问器、修改器等对字段的修改，导致不同模块之间数据不一致），基于以上问题，利用学习"),a("a",c,[n("《LX2 PHP 扩展包实战教程 - 从入门到发布》"),e(s)]),n("期间写了 "),a("a",u,[n("an5dy/laravel-admin-modules"),e(s)]),n(" 这个 laravel-admin 扩展包，能够实现简单地基于业务对后台进行模块拆分。")]),h,v,a("ul",null,[a("li",null,[n("其它参数与 laravel-admin 创建控制器 "),a("a",m,[n("admin:make"),e(s)]),n(" 一致。")])]),b,a("ul",null,[a("li",null,[k,n("：当前模块 bootstrap.php 文件，不受 laravel-admin 和其他模块的 bootstrap.php 影响，功能与 laravel-admin bootstrap.php 一致，具体参考"),a("a",g,[n("官网"),e(s)]),n("。")])])])}const M=i(r,[["render",_],["__file","laravel-admin 按模块拆分后台业务组件 laravel-admin-modules.html.vue"]]);export{M as default};
